<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.demo.channel.mapper.ChannelTechnicanMapper">
    <select id="queryOneChannelTechnicanHaveRecord" parameterType="string" resultType="int">
        select count(1) from channel_technician where identity_card = #{identityCard} and have_delete != 1 and review_status != 0 ;
    </select>

    <select id="batchCheckTechnicans" parameterType="string" resultType="int">
        SELECT COUNT(1) FROM channel_technician where identity_card in
        <foreach collection="identityCardList" index="index" item="identityCard" open="(" separator="," close=")">
            #{identityCard}
        </foreach>
        AND have_delete ! = 1 AND review_status != 0
    </select>

    <insert id="createOneChannelTechnicanRecord"
            parameterType="com.demo.channel.model.DTO.ChannelTechnicanAddDTO">
        insert into channel_technician (person_id, company_id, person_name, company_name, person_gender, identity_card, birthday, phone, province, city, county, address, job, email, hire_date, qq_num, telephone, review_status, create_time,update_time)
        values (#{channelTechnicanAddDTO.personId},#{channelTechnicanAddDTO.companyId},#{channelTechnicanAddDTO.personName},
        #{channelTechnicanAddDTO.companyName},#{channelTechnicanAddDTO.personGender},#{channelTechnicanAddDTO.identityCard},
        #{channelTechnicanAddDTO.birthday},#{channelTechnicanAddDTO.phone},#{channelTechnicanAddDTO.province},#{channelTechnicanAddDTO.city},
        #{channelTechnicanAddDTO.county},#{channelTechnicanAddDTO.address},#{channelTechnicanAddDTO.job},#{channelTechnicanAddDTO.email},
        #{channelTechnicanAddDTO.hireDate},#{channelTechnicanAddDTO.qqNum},#{channelTechnicanAddDTO.telephone},2,
        now(),now())
    </insert>

    <update id="updateTechnicanInfo" parameterType="com.demo.channel.model.DTO.ChannelTechnicanUpdateDTO">
        UPDATE channel_technician
        SET
        <if test="channelTechnicanUpdateDTO.personName != null and  channelTechnicanUpdateDTO.personName !='' ">
            person_name = #{channelTechnicanUpdateDTO.personName},
        </if>
        <if test="channelTechnicanUpdateDTO.personGender != null and  channelTechnicanUpdateDTO.personGender !='' ">
            person_gender = #{channelTechnicanUpdateDTO.personGender},
        </if>
        <if test="channelTechnicanUpdateDTO.identityCard != null and  channelTechnicanUpdateDTO.identityCard !='' ">
            identity_card = #{channelTechnicanUpdateDTO.identityCard},
        </if>
        <if test="channelTechnicanUpdateDTO.birthday != null and  channelTechnicanUpdateDTO.birthday !='' ">
            birthday = #{channelTechnicanUpdateDTO.birthday},
        </if>
        <if test="channelTechnicanUpdateDTO.phone != null and  channelTechnicanUpdateDTO.phone !='' ">
            phone = #{channelTechnicanUpdateDTO.phone},
        </if>
        <if test="channelTechnicanUpdateDTO.province != null and  channelTechnicanUpdateDTO.province !='' ">
            province = #{channelTechnicanUpdateDTO.province},
        </if>
        <if test="channelTechnicanUpdateDTO.city != null and  channelTechnicanUpdateDTO.city !='' ">
            city = #{channelTechnicanUpdateDTO.city},
        </if>
        <if test="channelTechnicanUpdateDTO.county != null and  channelTechnicanUpdateDTO.county !='' ">
            county = #{channelTechnicanUpdateDTO.county},
        </if>
        <if test="channelTechnicanUpdateDTO.address != null and  channelTechnicanUpdateDTO.address !='' ">
            address = #{channelTechnicanUpdateDTO.address},
        </if>
        <if test="channelTechnicanUpdateDTO.job != null and  channelTechnicanUpdateDTO.job !='' ">
            job = #{channelTechnicanUpdateDTO.job},
        </if>
        <if test="channelTechnicanUpdateDTO.email != null and  channelTechnicanUpdateDTO.email !='' ">
            email = #{channelTechnicanUpdateDTO.email},
        </if>
        <if test="channelTechnicanUpdateDTO.qqNum != null and  channelTechnicanUpdateDTO.qqNum !='' ">
            qq_num = #{channelTechnicanUpdateDTO.qqNum},
        </if>
        <if test="channelTechnicanUpdateDTO.hireDate != null and  channelTechnicanUpdateDTO.hireDate !='' ">
            hire_Date = #{channelTechnicanUpdateDTO.hireDate},
        </if>
        <if test="channelTechnicanUpdateDTO.telephone != null and  channelTechnicanUpdateDTO.telephone !='' ">
            telephone = #{channelTechnicanUpdateDTO.telephone},
        </if>
        review_status = 0,
        update_time = now()
        WHERE
        person_Id = #{channelTechnicanUpdateDTO.personId}
        AND have_delete != 1
    </update>

    <resultMap id="resultMap" type="com.demo.channel.model.DTO.ChannelTechnicanQueryDTO">
        <result column="person_id" jdbcType="VARCHAR" property="personId"/>
        <result column="company_id" jdbcType="VARCHAR" property="companyId"/>
        <result column="person_name" jdbcType="VARCHAR" property="personName"/>
        <result column="company_name" jdbcType="VARCHAR" property="companyName"/>
        <result column="person_gender" jdbcType="INTEGER" property="personGender"/>
        <result column="identity_card" jdbcType="VARCHAR" property="identityCard"/>
        <result column="birthday" jdbcType="TIMESTAMP" property="birthday"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="province" jdbcType="VARCHAR" property="province"/>
        <result column="city" jdbcType="VARCHAR" property="city"/>
        <result column="county" jdbcType="VARCHAR" property="county"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="job" jdbcType="VARCHAR" property="job"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="hire_date" jdbcType="TIMESTAMP" property="hireDate"/>
        <result column="qq_num" jdbcType="VARCHAR" property="qqNum"/>
        <result column="telephone" jdbcType="VARCHAR" property="telephone"/>
        <result column="review_status" jdbcType="VARCHAR" property="reviewStatus"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="not_pass_cause" jdbcType="VARCHAR" property="notPassCause"/>
    </resultMap>

    <select id="queryCheckPendingTechnicans" parameterType="map" resultMap="resultMap">
        SELECT
        ct.person_id,
        ct.company_id,
        ct.person_name,
        ct.company_name,
        ct.person_gender,
        ct.identity_card,
        ct.birthday,
        ct.phone,
        ct.province,
        ct.city,
        ct.county,
        ct.address,
        ct.job,
        ct.email,
        ct.hire_date,
        ct.qq_num,
        ct.telephone,
        ct.review_status,
        ct.create_time,
        ct.update_time,
        ct.not_pass_cause,
        ct.have_delete
        FROM
        channel_technician ct
        WHERE
        ct.have_delete != 1
        AND ct.review_status = 0
        <if test="companyName != null and  companyName !='' ">
            AND ct.company_name like CONCAT('%',#{companyName},'%')
        </if>
        <if test="personName != null and  personName !='' ">
            AND ct.person_name like CONCAT('%',#{personName},'%')
        </if>
        ORDER BY
        ct.update_time DESC
        LIMIT #{offSet}, #{rows}
    </select>
    <select id="queryHaveCheckTechnicans" parameterType="map" resultMap="resultMap">
        SELECT
        ct.person_id,
        ct.company_id,
        ct.person_name,
        ct.company_name,
        ct.person_gender,
        ct.identity_card,
        ct.birthday,
        ct.phone,
        ct.province,
        ct.city,
        ct.county,
        ct.address,
        ct.job,
        ct.email,
        ct.hire_date,
        ct.qq_num,
        ct.telephone,
        ct.review_status,
        ct.create_time,
        ct.update_time,
        ct.not_pass_cause,
        ct.have_delete
        FROM
        channel_technician ct
        WHERE
        ct.have_delete != 1
        AND ct.review_status != 0
        <if test="companyName != null and  companyName !='' ">
            AND companyName like CONCAT('%',#{companyName},'%')
        </if>
        <if test="personName != null and  personName !='' ">
            AND personName like CONCAT('%',#{personName},'%')
        </if>
        ORDER BY
        ct.update_time DESC
        LIMIT #{offSet}, #{rows}
    </select>

    <select id="queryCheckPendingTechnicansTotal" parameterType="map" resultType="int">
        SELECT
        count(person_id)
        FROM
        channel_technician
        WHERE
        have_delete != 1
        AND review_status = 0
        <if test="companyName != null and  companyName !='' ">
            AND company_name like CONCAT('%',#{companyName},'%')
        </if>
        <if test="personName != null and  personName !='' ">
            AND person_name like CONCAT('%',#{personName},'%')
        </if>
    </select>

    <select id="queryHaveCheckTechnicansTotal" parameterType="map" resultType="int">
        SELECT
        count(person_id)
        FROM
        channel_technician
        WHERE
        have_delete != 1
        AND review_status != 0
        <if test="companyName != null and  companyName !='' ">
            AND company_name like CONCAT('%',#{companyName},'%')
        </if>
        <if test="personName != null and  personName !='' ">
            AND person_name like CONCAT('%',#{personName},'%')
        </if>
    </select>

    <update id="reviewOperation" parameterType="map">
    UPDATE channel_technician
    SET review_status = #{review},
        not_pass_cause = #{notPassCause},
        update_time = now()
    WHERE
        person_Id = #{personId}
    AND have_delete != 1
    AND review_status = 0
    </update>

    <select id="previewTechnicanInfo" parameterType="map" resultMap="resultMap">
        SELECT
        ct.person_id,
        ct.company_id,
        ct.person_name,
        ct.company_name,
        ct.person_gender,
        ct.identity_card,
        ct.birthday,
        ct.phone,
        ct.province,
        ct.city,
        ct.county,
        ct.address,
        ct.job,
        ct.email,
        ct.hire_date,
        ct.qq_num,
        ct.telephone,
        ct.review_status,
        ct.create_time,
        ct.update_time,
        ct.not_pass_cause,
        ct.have_delete
        FROM
        channel_technician ct
        WHERE
        ct.have_delete != 1
        AND
        ct.person_id = #{personId}
    </select>

    <update id="deleteTechnican" parameterType="string">
    UPDATE channel_technician ct
    LEFT JOIN technican_certificate tc ON ct.person_id = tc.person_id
    SET
        ct.have_delete = 1,
        tc.have_delete = 1,
        ct.update_time = now(),
        tc.update_time = now()
    WHERE
        ct.person_Id = #{personId}
    </update>

    <insert id="batchInsertTechnicans" parameterType="com.demo.channel.model.DTO.ChannelTechnicanAddDTO">
        insert into channel_technician (person_id, company_id, person_name, company_name, person_gender, identity_card, birthday, phone, province, city, county, address, job, email, hire_date, qq_num, telephone, review_status, create_time,update_time)
        <foreach collection="channelTechnicanAddDTOS" index="index" item="channelTechnicanAddDTO"
                 separator=",">
        values (#{channelTechnicanAddDTO.personId},#{channelTechnicanAddDTO.companyId},#{channelTechnicanAddDTO.personName},
        #{channelTechnicanAddDTO.companyName},#{channelTechnicanAddDTO.personGender},#{channelTechnicanAddDTO.identityCard},
        #{channelTechnicanAddDTO.birthday},#{channelTechnicanAddDTO.phone},#{channelTechnicanAddDTO.province},#{channelTechnicanAddDTO.city},
        #{channelTechnicanAddDTO.county},#{channelTechnicanAddDTO.address},#{channelTechnicanAddDTO.job},#{channelTechnicanAddDTO.email},
        #{channelTechnicanAddDTO.hireDate},#{channelTechnicanAddDTO.qqNum},#{channelTechnicanAddDTO.telephone},2,
        now(),now())
        </foreach>
    </insert>
</mapper>